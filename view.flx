include "src/Aspect";
include "src/OpenGl";
include "src/Quantity";
include "src/V3d";

// create a default display connection
var aDispConnection = #Aspect::DisplayConnection;
// create a Graphic Driver
var aGraphicDriver:Graphic3d::GraphicDriver = OpenGl::GraphicDriver( &aDispConnection, true);
// create a Viewer to this Driver
var aViewer = V3d::Viewer( &aGraphicDriver);
aViewer.SetDefaultBackgroundColor( Quantity::NOC_DARKVIOLET);
// Create a structure in this Viewer
//Handle(Graphic3d_Structure) aStruct = new Graphic3d_Structure (aViewer->StructureManager());
//aStruct->SetVisual (Graphic3d_TOS_SHADING); // Type of structure
// Create a group of primitives  in this structure
//Handle(Graphic3d_Group) aPrsGroup = aStruct->NewGroup();
// Fill this group with one quad of size 100
//Handle(Graphic3d_ArrayOfTriangleStrips) aTriangles = new Graphic3d_ArrayOfTriangleStrips (4);
//aTriangles->AddVertex (-100./2., -100./2., 0.0);
//aTriangles->AddVertex (-100./2.,  100./2., 0.0);
//aTriangles->AddVertex ( 100./2., -100./2., 0.0);
//aTriangles->AddVertex ( 100./2.,  100./2., 0.0);
//Handle(Graphic3d_AspectFillArea3d) anAspects = new Graphic3d_AspectFillArea3d (Aspect_IS_SOLID, Quantity_NOC_RED,
//                                                                               Quantity_NOC_RED, Aspect_TOL_SOLID, 1.0f//,
//                                                                               Graphic3d_NameOfMaterial_Gold, Graphic3d_NameOfMaterial_Gold);
//aPrsGroup->SetGroupPrimitivesAspect (anAspects);
//aPrsGroup->AddPrimitiveArray (aTriangles);
// Create Ambient and Infinite Lights in this Viewer
//Handle(V3d_AmbientLight)     aLight1 = new V3d_AmbientLight (Quantity_NOC_GRAY50);
//Ha